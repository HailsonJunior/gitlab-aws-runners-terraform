default:
  image: 
    name: hashicorp/terraform:1.3.0
    entrypoint:
      - "/usr/bin/env"

variables:
  STATE_BASE_NAME: state-${CI_COMMIT_BRANCH}
  TF_IN_AUTOMATION: "true"
  GITLAB_TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${STATE_BASE_NAME}

include:
  - template: Jobs/SAST-IaC.gitlab-ci.yml   # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/SAST-IaC.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml # https://docs.gitlab.com/ee/user/application_security/secret_detection/

cache:
  key: "$CI_COMMIT_SHA"
  paths:
    - .terraform

stages:
  - format
  - validate
  - test
  - plan
  - apply
  - destroy

before_script:
  - apk add --update curl jq
  - alias convert_report="jq -r '([.resource_changes[].change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
  - terraform init -backend-config="address=${GITLAB_TF_ADDRESS}" -backend-config="lock_address=${GITLAB_TF_ADDRESS}/lock" -backend-config="unlock_address=${GITLAB_TF_ADDRESS}/lock" -backend-config="username=gitlab-ci-token" -backend-config="password=${GITLAB_TOKEN}" -backend-config="lock_method=POST" -backend-config="unlock_method=DELETE" -backend-config="retry_wait_min=5"

terraform-format:
  stage: format
  script:
    - apk update && apk add --no-cache jq curl bash
    - bash ./scripts/clear-auto-generated-discussions.sh
    - terraform fmt --check=true -recursive -diff 
  only:
    - merge_requests

terraform-validate:
  stage: validate
  script:
    - terraform validate
  only:
    refs: 
      - merge_requests

kics-iac-sast:
  stage: test
  rules:
    - if: $SAST_DISABLED
      when: never
    - if: $SAST_EXCLUDED_ANALYZERS =~ /kics/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"
  before_script:
    - echo "Executing IaC Scanner"

secret_detection:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"
  before_script:
    - echo "Executing Secret Detection Scanner"

terraform-plan:
  stage: plan
  script:
    - terraform plan -out=./terraform.tfplan -input=true
    - terraform show --json ./terraform.tfplan | convert_report > tfplan.json
  artifacts:
    name: ${CI_JOB_NAME}
    reports:
      terraform: tfplan.json
    expire_in: 1 week
  only:
    variables:
      - $destroy != "true"
    refs:
      - merge_requests
      - schedules
      - main

terraform-plan-destroy:
  stage: plan
  script:
    - terraform plan -destroy -out=./terraform.tfplan -input=true
    - terraform show --json ./terraform.tfplan | convert_report > tfplan.json
  artifacts:
    name: ${CI_JOB_NAME}
    reports:
      terraform: tfplan.json
    expire_in: 1 week
  only:
    variables:
      - $destroy == "true"
    refs:
      - main

terraform-apply:
  stage: apply
  needs:
    - job: terraform-plan
  script:
    - terraform apply ./terraform.tfplan -input=true
  when: manual
  only:
    variables:
      - $destroy != "true"
    refs:
      - main

terraform-destroy:
  stage: destroy
  needs:
    - job: terraform-plan-destroy
  script:
    - terraform destroy -auto-approve
  when: manual
  only:
    variables:
      - $destroy == "true"
    refs:
      - main